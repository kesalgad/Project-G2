Sure, I can help you with that. Let's start by defining the classes and their attributes that we'll need for this program:

InventoryItem: This class will represent each item in the inventory and will have the following attributes:
id: unique identifier for the item
name: name of the item
description: description of the item
quantity: current quantity of the item in the inventory
Warehouse: This class will represent each warehouse and will have the following attributes:
id: unique identifier for the warehouse
name: name of the warehouse
location: location of the warehouse (province, canton, etc.)
manager: name of the warehouse manager
telephone: telephone number of the warehouse
Distributor: This class will represent each distributor and will have the following attributes:
id: unique identifier for the distributor
name: name of the distributor
company: name of the distributor's company
zone: geographical zone covered by the distributor
address: address of the distributor
telephone: telephone number of the distributor
email: email address of the distributor
Delivery: This class will represent each delivery made to a distributor and will have the following attributes:
id: unique identifier for the delivery
item_id: identifier of the item being delivered
item_name: name of the item being delivered
distributor_id: identifier of the distributor receiving the delivery
distributor_name: name of the distributor receiving the delivery
warehouse_id: identifier of the warehouse from where the delivery is being made
warehouse_name: name of the warehouse from where the delivery is being made
quantity: quantity of the item being delivered
date: date of the delivery
InventoryManager: This class will handle the management of inventory items, warehouses, distributors and deliveries. It will have the following methods:
add_item(item): adds a new item to the inventory
update_item(item): updates an existing item in the inventory
remove_item(item_id): removes an item from the inventory
get_item(item_id): returns an item object given its identifier
get_all_items(): returns a list of all items in the inventory
add_warehouse(warehouse): adds a new warehouse
update_warehouse(warehouse): updates an existing warehouse
remove_warehouse(warehouse_id): removes a warehouse
get_warehouse(warehouse_id): returns a warehouse object given its identifier
get_all_warehouses(): returns a list of all warehouses
add_distributor(distributor): adds a new distributor
update_distributor(distributor): updates an existing distributor
remove_distributor(distributor_id): removes a distributor
get_distributor(distributor_id): returns a distributor object given its identifier
get_all_distributors(): returns a list of all distributors
make_delivery(delivery): records a new delivery
get_deliveries_by_distributor(distributor_id): returns a list of deliveries made to a specific distributor
get_inventory_by_distributor(distributor_id): returns a list of inventory items delivered to a specific distributor
ReportGenerator: This class will handle the generation of